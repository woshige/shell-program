case语句
   case 变量  in
      变量1)
         command 
         ;;
      变量2)
         command 
         ;;
      变量3
         command 
         ;;
      *)
         command
   esac
   //to do
    例子：rsync的启动和停止脚本
        如何启动：rsync --daemon
        如何停止：pkill rsync
        脚本名称：rsync_daemon
                #!/bin/bash
				source /etc/init.d/functions
				if [ $# -eq 0 ];then
				   echo "usage: option:[start|stop]"
				   exit 1
				fi
				if [ $1 == "start" ];then
				   if [ ! -f /var/run/rsync.pid ];then
				       touch /var/run/rsync.pid
				       rsync --daemon
				       action "rsync starting ..."  /bin/true
				   else
				       echo "rsync is running"
				   fi
				elif [ $1 == "stop" ];then
				   if [ -f /var/run/rsync.pid ];then
				       rm -fr /var/run/rsync.pid
				       pkill rsync
				       action "rsync stopping..."  /bin/true
				   else
				       action "rsyn service has been stopped"  /bin/false
				   fi
				else
				     echo "usage: option:[start|stop]"
				     exit 1
				fi
	    case实现： 
	                #!/bin/bash
					source /etc/init.d/functions
					rs=$1
					case $rs in
					    start)
					       if [ ! -f /var/run/rsync.pid ];then
					          touch /var/run/rsync.pid
					          rsync --daemon
					          action "rsync is starting ...." /bin/true
					       else
					          action "rsync has been started..." /bin/false
					       fi
					            ;;
					    stop)
					       if [ -f /var/run/rsync.pid ];then
					          rm -fr /var/run/rsync.pid
					          pkill rsync
					          action "rsync is stopping..." /bin/true
					       else
					          action "rsync has been stopped" /bin/false
					       fi
					            ;;
					    status)
					       if [ -f /var/run/rsync.pid ];then
					          echo "rsync is running"
					       else
					          status=$(ps -aux | grep rsync | grep -v grep | grep -v pts | awk '{print $2}')
					          echo "rsync is inactive: ${status}"   
					       fi
					            ;;
					    *)
					            echo "usage:[stop|start]"
					esac
  //to do
  网络服务中的rsync：

        rsync是在类unix系统下的数据镜像备份工具，一款支持快速完全备份和增量备份的工具，支持本地复制，远程同步。类似scp
        rsync使用的协议一般来说为：ssh和rsync
        特性：
             更新整个目录树和文件系统
             选择性的保留符号链接、硬链接、文件属性、权限、设备以及时间等
             对于安装来说无任何特殊的权限
             能用ssh或自定义协议端口作为传输入口端口

            源地址、目标地址、哪一方位基准
            验证方式：ssh（系统用户）或者rsync（非系统用户，自己创建的用户）
            数据同步方式：pull或者push
   实例：case实现Nginx启动和停止脚本
    	#!/bin/bash
		source /etc/init.d/functions
		if [ -f /tmp/lock ];then
		      action "启动脚本在另一个进程中执行"
		      exit 1
		else
		    touch /tmp/lock
		fi
		NGINX_HOME=/usr/local/nginx
		rc=$1
		case $rc in
		     start)
		           if [ -f $NGINX_HOME/logs/nginx.pid ];then
		                  action "nginx服务已经启动"   /bin/false
		           else
		                  ${NGINX_HOME}/sbin/nginx
		                  action "nginx服务正在启动中" /bin/true
		           fi
		            ;;
		     stop)
		           if [ -f $NGINX_HOME/logs/nginx.pid ];then
		                 ${NGINX_HOME}/sbin/nginx -s stop
		                 if [ $? -eq 0 ];then
		                    action "nginx服务关闭成功"  /bin/true
		                 else
		                    action "nginx服务关闭失败"  /bin/false
		                 fi
		           else
		                    action "nginx服务已经关闭"  /bin/false
		           fi
		            ;;
		     reload)
		            if [ -f $NGINX_HOME/logs/nginx.log ];then
		                 $NGINX_HOME/sbin/nginx -s reload
		                 if [ $? -eq 0 ];then
		                    action "nginx服务reload成功" /bin/true
		                 else
		                    action "nginx服务reloade失败" /bin/false
		                 fi
		            else
		                    action "nginx服务没有启动"    /bin/false
		            fi
		            ;;
		     status)
		            if [ -f $NGINX_HOME/logs/nginx.pid ];then
		                 nginx_status=$(cat ${NGINX_HOME}/logs/nginx.pid)
		                 echo "nginx  ($nginx_status) is runnning"
		            else
		                 echo "nginx is inactive"
		            fi
		            ;;
		     *)
		         echo "usage:$(0) [ start | stop | reload | status ]"
		esac
		rm -fr /tmp/lock






		#!/bin/bash
		source /etc/init.d/functions
		if [ -f /tmp/lock ];then
		      action "启动脚本在另一个进程中执行"
		      exit 1
		else
		    touch /tmp/lock
		fi
		NGINX_HOME=/usr/local/nginx
		rc=$1
		case $rc in
		     start)
		           if [ -f $NGINX_HOME/logs/nginx.pid ];then
		                  action "nginx服务已经启动"   /bin/false
		           else
		                  ${NGINX_HOME}/sbin/nginx
		                  action "nginx服务正在启动中" /bin/true
		           fi
		            ;;
		     stop)
		           if [ -f $NGINX_HOME/logs/nginx.pid ];then
		                 ${NGINX_HOME}/sbin/nginx -s stop
		                 if [ $? -eq 0 ];then
		                    action "nginx服务关闭成功"  /bin/true
		                 else
		                    action "nginx服务关闭失败"  /bin/false
		                 fi
		           else
		                    action "nginx服务已经关闭"  /bin/false
		           fi
		            ;;
		     reload)
		            if [ -f $NGINX_HOME/logs/nginx.log ];then
		               $NGINX_HOME/sbin/nginx -t &> /dev/null
		               if [ $? -eq 0 ];then
		                 $NGINX_HOME/sbin/nginx -s reload
		                 if [ $? -eq 0 ];then
		                    action "nginx服务关闭成功"  /bin/true
		                 else
		                    action "nginx服务关闭失败"  /bin/false
		                 fi
		           else
		                    action "nginx服务已经关闭"  /bin/false
		           fi
		            ;;
		     reload)
		            if [ -f $NGINX_HOME/logs/nginx.log ];then
		               $NGINX_HOME/sbin/nginx -t &> /dev/null
		               if [ $? -eq 0 ];then
		                 $NGINX_HOME/sbin/nginx -s reload
		                 if [ $? -eq 0 ];then
		                    action "nginx服务reload成功" /bin/true
		                 else
		                    action "nginx服务reloade失败" /bin/false
		                 fi
		               else
		                $NGINX_HOME/sbin/nginx -t &> $NGINX_HOME/logs/err.txt
		                NGINX_CONF=$(awk -F "[: ]" 'NR==1{print $(NF-1)}'  $NGINX_HOME/logs/err.txt)
		                NGINX_LINE=$(awk -F "[: ]" 'NR==1{print $(NF)}'  $NGINGX_HOME/logs/err.txt)
		                read -p "是否要进入配置文件进行修改？[y|n]" re
		                case $re in
		                      y|yes|Y|YES)
		                            vim +$(NGINGX_LINE)  $NGINX_CONF
		                            ;;
		                      n|no|NO|N)
		                            echo "你可以选择手动修改，再见"
		                            ;;
		                      *)
		                            echo "Usage: $0 {y|n}"
		               fi
		            else
		                    action "nginx服务没有启动"    /bin/false
		            fi
		            ;;
		     status)
		            if [ -f $NGINX_HOME/logs/nginx.pid ];then
		                 nginx_status=$(cat ${NGINX_HOME}/logs/nginx.pid)
		                 echo "nginx  ($nginx_status) is runnning"
		            else
		                 echo "nginx is inactive"
		            fi
		            ;;
		     *)
		         echo "usage:$(0) [ start | stop | reload | status ]"
		esac
		rm -fr /tmp/lock